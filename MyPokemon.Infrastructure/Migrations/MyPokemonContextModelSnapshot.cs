// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPokemon.Infrastructure.DBContext;

#nullable disable

namespace MyPokemon.Infrastructure.Migrations
{
    [DbContext(typeof(MyPokemonContext))]
    partial class MyPokemonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MyPokemon.Domain.Entities.PType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2777),
                            IsDeleted = false,
                            Name = "Fire",
                            UpdatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2794)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2797),
                            IsDeleted = false,
                            Name = "Water",
                            UpdatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2798)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2799),
                            IsDeleted = false,
                            Name = "Grass",
                            UpdatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2800)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2801),
                            IsDeleted = false,
                            Name = "Flying",
                            UpdatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2801)
                        });
                });

            modelBuilder.Entity("MyPokemon.Domain.Entities.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Height_m")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Weight_kg")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2865),
                            Height_m = 0.6f,
                            IsDeleted = false,
                            Name = "Charmander",
                            UpdatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2866),
                            Weight_kg = 8.5f
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2868),
                            Height_m = 0.5f,
                            IsDeleted = false,
                            Name = "Squirtle",
                            UpdatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2869),
                            Weight_kg = 9f
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2870),
                            Height_m = 0.7f,
                            IsDeleted = false,
                            Name = "Bulbasaur",
                            UpdatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2871),
                            Weight_kg = 6.9f
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2872),
                            Height_m = 1.7f,
                            IsDeleted = false,
                            Name = "Charizard",
                            UpdatedAt = new DateTime(2024, 6, 19, 16, 21, 18, 996, DateTimeKind.Local).AddTicks(2873),
                            Weight_kg = 90.5f
                        });
                });

            modelBuilder.Entity("MyPokemon.Domain.Entities.Pokemon_Type", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("PokemonTypes");

                    b.HasData(
                        new
                        {
                            PokemonId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            PokemonId = 2,
                            TypeId = 2
                        },
                        new
                        {
                            PokemonId = 3,
                            TypeId = 3
                        },
                        new
                        {
                            PokemonId = 4,
                            TypeId = 1
                        },
                        new
                        {
                            PokemonId = 4,
                            TypeId = 4
                        });
                });

            modelBuilder.Entity("MyPokemon.Domain.Entities.Pokemon_Type", b =>
                {
                    b.HasOne("MyPokemon.Domain.Entities.Pokemon", "Pokemon")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyPokemon.Domain.Entities.PType", "PType")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PType");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("MyPokemon.Domain.Entities.PType", b =>
                {
                    b.Navigation("PokemonTypes");
                });

            modelBuilder.Entity("MyPokemon.Domain.Entities.Pokemon", b =>
                {
                    b.Navigation("PokemonTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
